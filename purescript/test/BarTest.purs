module Test.BarTest where

import Prelude

import Test.Unit.Assert as Assert
import Test.Unit (suite, test, failure, TestSuite, Test)
import Partial.Unsafe (unsafePartial)
import Data.Maybe (fromJust,Maybe(..))
import Data.Array as Array
import Control.Monad.Reader 
  ( runReader 
  )

import HarborView.Maunaloa.JsonCharts as J
import HarborView.Maunaloa.JsonCharts 
  ( JsonChart(..)
  , JsonChartResponse(..)
  )
import HarborView.Maunaloa.ChartCollection
  ( ChartCollection(..)
  )
import HarborView.Maunaloa.Chart 
  ( Chart(..)
  )
import HarborView.Maunaloa.VRuler as V
import HarborView.Maunaloa.VRuler
  ( VRuler
  )
import HarborView.Maunaloa.Common 
  ( ChartHeight(..)
  , ChartId(..)
  , ChartMapping(..)
  , ChartMappings
  , ChartType(..)
  , ChartWidth(..)
  , Drop(..)
  , Env(..)
  , HtmlId(..)
  , Scaling(..)
  , StockTicker(..)
  , Take(..)
  , UnixTime(..)
  , ValueRange(..)
  , Xaxis
  )
import HarborView.Maunaloa.ChartTransform as T
import HarborView.Maunaloa.HRuler
  ( HRuler(..)
  )

import HarborView.Maunaloa.Bar as B

testBars :: Array B.Bar
testBars  = 
  [[0.11616249882368306, 0.17694841298039343, 0.27299464367679227, 0.21688442133848543, 0.15451062334235335, 0.16918452907951517, 
  0.18231702749988957, 0.4494579339457223, 0.1388972004616924, 0.2614500290958396, 0.16723981309524039, 0.189532411612985, 
  0.22500014403880983, 0.22624771218357073, 0.3260512432469805, 0.17664612353152434, 0.1600528526406155, 0.31940394819980295, 
  0.14291837992828788, 0.23969402315759958, 0.20658353386736522, 0.22507427601292893, 0.5169671956411935, 0.15495426287658948, 
  0.19996389427167255, 0.2148824739337767, 0.22551215399477234, 0.24877538203893657, 0.1349175041723242, 0.31243246980466416, 
  0.1835561453678079, 0.30327160150030824, 0.18625408830155196, 0.13447271232760954, 0.31592397055462623, 0.23140353336803068, 
  0.20306975511481815, 0.15857789522809027, 0.2994624471617633, 0.2738027974257384, 0.16591734476937467, 0.21751166234230151, 
  0.19156700781458555, 0.13928706550693018, 0.2043849254743198, 0.1359614974658772, 0.16849890434478665, 0.14497679054644483, 
  0.14246705832419487, 0.17986798362950915, 0.11880935599287872, 0.14199768385593814, 0.16089096646200352, 0.1591198652564947, 
  0.20816027870549442, 0.17113001327077568, 0.12851027380817487, 0.22083761448684733, 0.21557270791041938, 0.16273389502067437, 
  0.16356663139316258, 0.17861081289742708, 0.15564027171481085, 0.20256043388330552, 0.3222263406652288, 0.4538355614536781, 
  0.42836373832565444, 0.2752093844165372, 0.37072094305089565, 0.30707153735502496, 0.28546648408947306, 0.24986277902718107, 
  0.20889622099778565, 0.17461460015786653, 0.2893747371291721, 0.4064010847082638, 0.19971537931180178, 0.3020393974952611, 
  0.5269596480075591, 0.2886126757993674, 0.31540120570086405, 0.28551641754354296, 0.44368140151682467, 0.42217122181400557, 
  0.2732078211153213, 0.20657508359052262, 0.16038548626541935, 0.5225908548799388, 0.5012554422663642, 0.34560864079217507, 
  0.28044202629956616, 0.23490425260182105, 0.2488207062510923, 0.3270664287785701, 0.3475506680519999, 0.25263984728045125, 
  0.21132183455510253, 0.21432014642025146, 0.21078677838956927, 0.4592556458412155, 0.1563550883149956, 0.29742208940777004, 
  0.2342193960740782, 0.2946934181945984, 0.21514097558446146, 0.1749045982949646, 0.2025423810191418, 0.2907498276335576, 
  0.2292717589827403, 0.26948240133821655, 0.31142688686039566, 0.3717580224815774, 0.292273950293167, 0.20339393846277942, 
  0.2767819041162451, 0.19650043307668819, 0.27064354619708736, 0.2784058936839942, 0.26169508712427475, 0.35760803390865636, 
  0.3007296045846593, 0.46306403197277474, 0.3296257103513971, 0.2775251443749004, 0.29828171302475737, 0.20379763123375963, 
  0.27726433810325857, 0.3004764803828744, 0.223908521912144, 0.3271106006802473, 0.27775330184965036, 0.3397453009738944, 
  0.18228783563443335, 0.24110637170079105, 0.2878114359132925, 0.2124975753467014, 0.2830281951168923, 0.5016245657229884, 
  0.2480382874361668, 0.3369943517581377, 0.22116448655925852, 0.1820508437793479, 0.35340094835152386, 0.32775819916918414, 
  0.2165249004691824, 0.33053565152594716, 1.0, 0.28676321748131817, 0.3172664122621199, 0.25567426487392764, 
  0.30940803890200175, 0.30215654906057887, 0.5145784560191898, 0.5450274922075004, 0.5224986700416561, 0.6569817531635724, 
  0.4072868273627646, 0.31173416965467177, 0.3846289464233243, 0.32774475554693455, 0.5701778207120126, 0.2951996665981682, 
  0.38785464755623755, 0.2691897144766686, 0.23566247289669728, 0.37545924373863293, 0.31520377650554166, 0.2350955361412579, 
  0.2624414002108728, 0.30367491016779563, 0.3888537007411277, 0.5044807592957846, 0.43649828209712827, 0.5423618139671553, 
  0.9639480461615578, 0.2798601095079058, 0.20230193223262075, 0.19710117093949794, 0.26841805055954276, 0.18622835336753135, 
  0.23078666315852142, 0.22634066522883925, 0.3051245167497931, 0.22405793817086075, 0.2394385943348576, 0.16217924957700602, 
  0.14585677164855299, 0.21281215610734155, 0.3426786993487525, 0.17775618262584672, 0.17506323303750962, 0.283822521140096, 
  0.17126790642470707, 0.29620793826688663, 0.15576356893601412, 0.21702692373433097, 0.23694307394184289, 0.36556051262452155, 
  0.21127458982548258, 0.1647750209816533, 0.33050761197096945, 0.15985004599639327, 0.14912741289012912, 0.08928677742931056, 
  0.10278724699583056, 0.19131849285471478, 0.2787577324834403, 0.18979936354051236, 0.17413908003372428, 0.39142488952223287, 
  0.22713076611362165, 0.1643459773801453, 0.22686266187561577, 0.1808263218441577, 0.17673638785234294, 0.13133919603297914, 
  0.15802670671585753, 0.23407113212584, 0.20415062234368428, 0.26527800450553396, 0.2230366069833856, 0.16038625447240504, 
  0.5652136671704824, 0.1856667940609918, 0.19171258303837385, 0.15872500686584992, 0.21717979692448333, 0.16655649298146893, 
  0.19639672513362, 0.2352265154323181, 0.18557422511921612, 0.16615356841747442, 0.2974973736923677, 0.21892554729946437, 
  0.1977172729420215, 0.33217308471594587, 0.21300036681883566, 0.17218706608308543, 0.18227746484012652, 0.16403715817189785, 
  0.2159280036413011, 0.3481855911256729, 0.2922393809788109, 0.22703627665438175, 0.34708359820470025, 0.26199545605567964, 
  0.2711221391491723, 0.21501076450038697, 0.1370615698693856, 0.20176034630770914, 0.3793018150810554, 0.3276160808768315, 
  0.31680241524276304, 0.2530646657435379, 0.18123385565006636, 0.15461279487145016, 0.16880810765652698, 0.16568457805271053, 
  0.21336449693005283, 0.13518868123827285, 0.2972116006936909, 0.3468047390688947, 0.24223371545229147, 0.235229204156768, 
  0.1963022356743801, 0.3853721866819796, 0.19568075622295672, 0.22082993241699042, 0.23074786870574407, 0.2967341600520844, 
  0.29287161532803396, 0.19908890651497138, 0.19468554407299501, 0.33445312304947444, 0.97728680815759, 0.2725148984142287, 
  0.39196455492968024, 0.20060265838027397, 0.21798103681055825, 0.1616272928577876, 0.2117286001540255, 0.29230506267608747, 
  0.27777365933477116, 0.22080688620741973, 0.15499075270840976, 0.1969851716846587, 0.23847679918877343, 0.3471485116949911, 
  0.07857874025577452, 0.12922701092582387, 0.13385968315302876, 0.1302594811145915, 0.1222490027713067, 0.13311605879088062, 
  0.1761475571978114, 0.19967351203108166, 0.1610926207957472, 0.16298202587705232, 0.19601070112331068, 0.12875264311216014, 
  0.10272233350553973, 0.13478076332887134, 0.11786868653890104, 0.15747513410013195, 0.19494174110272272, 0.13107992617530867, 
  0.13479612746858513, 0.1836813631064754, 0.14494298943907447, 0.17124293969767215, 0.11689882521946714, 0.12434851246319809, 
  0.1075343820639033, 0.11756639709003194, 0.13546984499503545, 0.15758191487114287, 0.211397502943193, 0.20013827725742425, 
  0.20658353386736522, 0.26142583057579033, 0.2323307591997588, 0.259214546767481, 0.16573335919630186, 0.11728984257518346, 
  0.2767515599403103, 0.2582408444131187, 0.1446349384378127, 0.12993529776663024, 0.09670842511806381, 0.15957425968853048, 
  0.22743920121837627, 0.2927644504535302, 0.13683648522257838, 0.167151469291886, 0.08751721263777312, 0.1502920146804355, 
  0.12743439992471572, 0.24774675288509737, 0.13760161938032583, 0.32845918804362645, 0.19956903588102778, 0.16662678392065958, 
  0.16189117195737218, 0.12176157543888626, 0.13935735644612085, 0.13996078303338053, 0.16753365226726688, 0.1371049735640771, 
  0.25660149070565574, 0.16874473058020753, 0.09329758610159922, 0.1699423652708986, 0.23847526277480205, 0.15700883245981798, 
  0.18897776616931666, 0.352683827130382, 0.1617260074554488, 0.23206457547921713, 0.21835169668115376, 0.19515607085173028, 
  0.23640724956932396, 0.2554192201546785, 0.1972986001348203, 0.23499874206106094, 0.17162281805209595, 0.22545645898830982, 
  0.20667379818818382, 0.29997138428978304, 0.1921888713695018, 0.15001161913065855, 0.12573282145141187, 0.20190361691054037, 
  0.15962918648800734, 0.18537718002738657, 0.1866500990026753, 0.3080705905399151, 0.3579168531169038, 0.2159057256387161, 
  0.1827260977197696, 0.20524723781575707, 0.17231266792524577, 0.23690274307509415, 0.2504896359275043, 0.1851167578592376, 
  0.23879368457037065, 0.2182149558377009, 0.39437902948570464, 0.18762456956402332, 0.2885976957631464, 0.3333983748581218, 
  0.18429400817756336, 0.198043376807447, 0.1716147518787462, 0.20720693383625283, 0.22430645313073155, 0.17280009525766624, 
  0.219348061141594, 0.2253523669417488, 0.4093751980533635, 0.1700887087016726]]

testXaxis :: Array Int
testXaxis = 
  [4673, 4672, 4669, 4668, 4667, 4666, 4665, 4662, 4661, 4660, 4659, 4658, 4655, 4654, 4653, 4652, 4651, 4648, 4647, 
  4646, 4645, 4644, 4641, 4640, 4639, 4638, 4637, 4634, 4633, 4632, 4631, 4630, 4627, 4626, 4625, 4624, 4623, 4620, 
  4619, 4618, 4617, 4616, 4613, 4612, 4611, 4610, 4609, 4606, 4605, 4604, 4603, 4602, 4599, 4598, 4597, 4596, 4595, 
  4592, 4591, 4590, 4589, 4588, 4585, 4584, 4583, 4582, 4581, 4578, 4577, 4576, 4575, 4574, 4571, 4570, 4569, 4568, 
  4567, 4564, 4563, 4562, 4561, 4560, 4557, 4556, 4555, 4554, 4553, 4550, 4549, 4548, 4547, 4546, 4543, 4542, 4541, 
  4540, 4536, 4535, 4534, 4533, 4532, 4529, 4527, 4526, 4525, 4522, 4521, 4520, 4518, 4515, 4514, 4513, 4512, 4511, 
  4508, 4507, 4506, 4505, 4504, 4501, 4500, 4499, 4498, 4497, 4494, 4493, 4492, 4491, 4485, 4484, 4483, 4480, 4479, 
  4478, 4477, 4476, 4473, 4472, 4471, 4470, 4469, 4466, 4465, 4464, 4463, 4462, 4459, 4458, 4457, 4456, 4455, 4452, 
  4451, 4450, 4449, 4448, 4445, 4444, 4443, 4442, 4441, 4438, 4437, 4436, 4435, 4434, 4431, 4430, 4429, 4428, 4427, 
  4424, 4423, 4422, 4421, 4420, 4417, 4416, 4415, 4414, 4413, 4410, 4409, 4408, 4407, 4406, 4403, 4402, 4401, 4400, 
  4399, 4396, 4395, 4394, 4393, 4392, 4389, 4388, 4387, 4386, 4385, 4381, 4380, 4379, 4378, 4374, 4373, 4372, 4371, 
  4368, 4367, 4366, 4365, 4364, 4361, 4360, 4359, 4358, 4357, 4354, 4353, 4352, 4351, 4350, 4347, 4346, 4345, 4344, 
  4343, 4340, 4339, 4338, 4337, 4336, 4333, 4332, 4331, 4330, 4329, 4326, 4325, 4324, 4323, 4322, 4319, 4318, 4317, 
  4316, 4315, 4312, 4311, 4310, 4309, 4308, 4305, 4304, 4303, 4302, 4301, 4298, 4297, 4296, 4295, 4294, 4291, 4290, 
  4289, 4288, 4287, 4284, 4283, 4282, 4281, 4280, 4277, 4276, 4275, 4274, 4273, 4270, 4269, 4268, 4267, 4266, 4263, 
  4262, 4261, 4260, 4259, 4256, 4255, 4254, 4253, 4252, 4249, 4248, 4247, 4246, 4245, 4242, 4241, 4240, 4239, 4238, 
  4235, 4234, 4233, 4232, 4231, 4228, 4227, 4226, 4225, 4224, 4221, 4220, 4219, 4218, 4217, 4214, 4213, 4212, 4211, 
  4210, 4207, 4206, 4205, 4204, 4203, 4200, 4199, 4198, 4197, 4196, 4193, 4192, 4191, 4190, 4189, 4186, 4185, 4184, 
  4183, 4182, 4179, 4178, 4177, 4176, 4175, 4172, 4171, 4170, 4169, 4168, 4165, 4164, 4163, 4162, 4158, 4157, 4156, 
  4155, 4151, 4149, 4148, 4147, 4144, 4143, 4142, 4141, 4140, 4137, 4136, 4135, 4134, 4133, 4130, 4129, 4128, 4127, 
  4126, 4123, 4122, 4121, 4120, 4119, 4116, 4115, 4114, 4113, 4107, 4106, 4105, 4102, 4101, 4100, 4099, 4098, 4095, 4094]
 
testJsonChartResponse :: JsonChartResponse
testJsonChartResponse =
  { ticker: "YAR"
  , chart: J.emptyJsonChart
  , chart2: J.emptyJsonChart
  , chart3: { lines: Nothing, bars: Just testBars, candlesticks: Nothing }
  , xAxis: testXaxis
  , minDx: 1262304000000.0
  }

testTicker :: StockTicker
testTicker = 
  StockTicker "YAR"

chartMapping :: ChartMapping
chartMapping = 
  ChartMapping 
  { ticker: testTicker 
  , chartId: ChartId "chart3"
  , canvasId: HtmlId "test-canvasId"
  , chartHeight: ChartHeight 120.0
  , levelCanvasId: HtmlId "" 
  , addLevelId: HtmlId "" 
  , fetchLevelId: HtmlId "" 
  }

testEnv :: Env
testEnv = Env
  { ticker: testTicker 
  , dropAmt: Drop 0
  , takeAmt: Take 90
  , chartType: DayChart
  , mappings: [chartMapping] 
  , globalChartWidth: ChartWidth 1310.0
  , scaling: Scaling 1.0
  }

-- testVruler : 

testHruler :: HRuler -> Test
testHruler (HRuler hruler) = 
  Assert.equal 1 (1 :: Int)

testChart :: Array Chart -> Test 
testChart [(Chart c)] = 
  let 
    bar = unsafePartial $ fromJust $ Array.head c.bars
    bar_2 = Array.take 2 bar
  in
  --Assert.equal bar_2 [0.0 0.0] *>
  Assert.equal 3 (3 :: Int)
testChart _ = 
  failure "Incorrect number of Charts"



demo = 
  let 
    (ChartCollection coll) = runReader (T.transform testJsonChartResponse) testEnv 
  in
  case coll.charts of 
    [(Chart c)] -> 
      unsafePartial $ fromJust $ Array.head c.bars
    _ -> 
      []
  
demo2 = 
  T.chartWindow (Drop 0) (Take 90) testJsonChartResponse.chart3 (Scaling 1.0) false 10

  -- let 
  --   w = T.chartWindow (Drop 0) (Take 90) testJsonChartResponse.chart3 (Scaling 1.0) false 10
  -- in
  -- w.bars


testBarSuite :: TestSuite
testBarSuite = 
  suite "TestBarSuite" do
    let (ChartCollection coll) = runReader (T.transform testJsonChartResponse) testEnv 
    test "testBarToPix" do
      testChart coll.charts
      --Assert.equal (UnixTime 1615939200000.0) hruler.startTime
      --Assert.equal (UnixTime 1627430400000.0) hruler.endTime


