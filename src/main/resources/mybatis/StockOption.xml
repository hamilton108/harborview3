<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="harborview.mybatis.StockOptionMapper">
    <resultMap id="stockOptionMap" type="harborview.domain.stockmarket.StockOption">
        <result column="oid" property="oid"/>
        <result column="opname" property="ticker"/>
        <result column="strike" property="x"/>
        <result column="exp_date" property="expirySql"/>
        <result column="optype" property="opTypeStr"/>
        <result column="stock_id" property="stockId"/>
    </resultMap>

    <select id="findStockOption" resultMap="stockOptionMap" parameterType="string">
        select oid,opname,strike,exp_date,optype,stock_id,series
        from stockmarket.optionx where opname=#{value}
    </select>

    <insert id="insertPurchase"
            parameterType="harborview.domain.stockmarket.StockOptionPurchase"
            useGeneratedKeys="true"
            keyProperty="oid" >
        insert into stockmarket.optionpurchase (opid, dx, price, volume, status, purchase_type, spot, buy)
        values (#{optionId}, #{dx}, #{price}, #{volume}, #{status}, #{purchaseType}, #{spotAtPurchase}, #{buyAtPurchase})
    </insert>

    <insert id="insertStockOption"
            parameterType="harborview.domain.stockmarket.StockOption"
            useGeneratedKeys="true"
            keyProperty="oid" >
        insert into stockmarket.optionx (opname, strike, exp_date, optype, stock_id, series)
        values (#{ticker}, #{x}, #{expirySql}, #{opTypeStr}, #{stockId}, #{series})
    </insert>
    <!--
    oid              | integer |           | not null | nextval('optionsale_oid_seq'::regclass)
    purchase_id      | integer |           | not null |
    dx               | date    |           |          | now()
    price            | price   |           | not null |
    volume           | volume  |           | not null |
    status           | status  |           |          | 0
    transaction_cost | price   |           | not null | 0
    -->

    <insert id="insertSale"
            parameterType="harborview.domain.stockmarket.StockOptionSale"
            useGeneratedKeys="true"
            keyProperty="oid" >
        insert into stockmarket.optionsale (purchase_id, price, volume)
        values (#{purchaseOid}, #{price}, #{volume})
    </insert>

    <resultMap id="purchaseWithSalesMap" type="harborview.domain.stockmarket.StockOptionPurchase">
        <id column="oid" property="oid"/>
        <result column="dx" property="dx"/>
        <result column="price" property="price"/>
        <result column="buy" property="buyAtPurchase"/>
        <result column="spot" property="spotAtPurchase"/>
        <result column="volume" property="volume"/>
        <result column="status" property="status"/>
        <result column="ticker" property="ticker"/>
        <result column="opid" property="optionId"/>
        <result column="opname" property="optionName"/>
        <result column="optype" property="optionType"/>
        <result column="exp_date" property="expirySql"/>
        <result column="strike" property="x"/>
        <!--
	    <association property="myDerivative" column="oid" javaType="critter.beans.options.DerivativeBean">
	    	<id property="oid" column="d_oid"/>
			<result property="expirySql" column="exp_date"/>
			<result property="x" column="strike"/>
	    </association>
	    -->
        <collection property="sales"
                    column="oid"
                    javaType="ArrayList"
                    ofType="harborview.domain.stockmarket.StockOptionSale">
            <id property="oid" column="s_oid"/>
            <result property="dx" column="s_dx"/>
            <result property="price" column="s_price"/>
            <result property="volume" column="s_volume"/>
        </collection>
    </resultMap>
    <!--
    <select id="purchasesWithSales" resultMap="purchaseWithSalesMap">
        select o.*,s.ticker,d.oid as d_oid,d.opname,d.exp_date,d.optype,d.strike,
        x.oid as s_oid,x.dx as s_dx,x.price as s_price,x.volume as s_volume
        from stockmarket.optionpurchase o
        join stockmarket.optionx d on d.oid=o.opid
        join stockmarket.stocktickers s on s.oid=d.stock_id
        left outer join stockmarket.optionsale x on x.purchase_id=o.oid
        where d.stock_id=#{stockId} and o.status=#{status} and o.purchase_type=#{purchaseType}
        <if test="optype != null">
            and d.optype=#{optype}
        </if>
        order by s.oid,o.dx
    </select>
    -->
    <select id="purchasesWithSalesAll" resultMap="purchaseWithSalesMap">
        select o.*,s.ticker,d.oid as d_oid,d.opname,d.exp_date,d.optype,d.strike,
        x.oid as s_oid,x.dx as s_dx,x.price as s_price,x.volume as s_volume
        from stockmarket.optionpurchase o
        join stockmarket.optionx d on d.oid=o.opid
        join stockmarket.stocktickers s on s.oid=d.stock_id
        left outer join stockmarket.optionsale x on x.purchase_id=o.oid
        where o.status=#{status} and o.purchase_type=#{purchaseType}
        <if test="optype != null">
            and d.optype=#{optype}
        </if>
        order by s.oid,o.dx
    </select>
</mapper>